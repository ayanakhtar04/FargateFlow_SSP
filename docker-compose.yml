version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: smart_study_planner_db
    environment:
      POSTGRES_DB: smart_study_planner
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - smart_study_planner_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: smart_study_planner_backend
    environment:
      - NODE_ENV=development
      - PORT=5000
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=smart_study_planner
      - DB_USER=postgres
      - DB_PASSWORD=postgres123
      - JWT_SECRET=your_super_secret_jwt_key_here_make_it_long_and_random
      - JWT_EXPIRES_IN=7d
      - CORS_ORIGIN=http://localhost:3000
    ports:
      - "5000:5000"
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - smart_study_planner_network
    command: npm run dev

  # Frontend React App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: smart_study_planner_frontend
    environment:
      - REACT_APP_API_URL=http://localhost:5000/api
      - REACT_APP_ENV=development
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - smart_study_planner_network
    command: npm start

  # Redis (for caching and sessions if needed)
  redis:
    image: redis:7-alpine
    container_name: smart_study_planner_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - smart_study_planner_network

volumes:
  postgres_data:
  redis_data:

networks:
  smart_study_planner_network:
    driver: bridge 